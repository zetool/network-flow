<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project>
<project>
  <target name="init.test" depends="init" description="Generate directories used for testing.">
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${test.build.dir}"/>
    <mkdir dir="${test.build.dir}/classes"/>
    <mkdir dir="${test.reports.dir}"/>
    <mkdir dir="${reports.xml.dir}"/>
    <mkdir dir="${reports.html.dir}"/>
  </target>

  <macrodef name="setup-test">
    <sequential>
      <property name="classpath.custom" value="${classpath}"/>
      <path id="test.classpath">
        <path refid="test.path"/>
        <path refid="core.path"/>
        <pathelement path="${classes.dir}"/>
        <pathelement path="${classpath.custom}"/>                    
        <pathelement path="${test.build.dir}/classes"/>
      </path>
      <fileset id="test.fileset" dir="${test.src.dir}">
<!--        <include name="**/*Test*.java"/>
        <exclude name="**/AllTests.java"/>-->
          <include name="**/*Test*"/>
          <!-- a '$' in the filename means it's an inner class -->
          <exclude name="**/*$*"/>
        
      </fileset>
    </sequential>
  </macrodef>

  <!-- Tests the project. Takes into account the following class paths:
        - core.path as defined by ivy.xml
        - test.path as defined by ivy.xml
        - ${classes.dir}, the output of the build step
        - classpath as defined in project-specific properties file
        - classpath.manual as defined in project-specific properties file
        - classpath.custom can be used to override project specific classpath
  -->
  <target name="build.test" depends="init.test,build" description="Build test classes.">
    <property name="classpath.custom" value="${classpath}"/>
    <echo>Classpath: ${classpath.custom}</echo>
    <setup-test/>
    <javac srcdir="${test.src.dir}" destdir="${test.build.dir}/classes" debug="yes">
      <classpath>
        <path refid="test.classpath"/>
      </classpath>
    </javac>
    <copy todir="${classes.dir}">
      <fileset dir="src" includes="**/*.xml,**/*.properties,**/*.txt,**/*.ico" />
    </copy>
  </target>

  <target name="test" depends="build.test" description="Perform JUnit tests.">
    <junit printsummary="yes" haltonfailure="no" showoutput="true">
      <classpath refid="test.classpath"/>
      <formatter type="plain"/>
      <batchtest fork="yes" todir="${reports.xml.dir}">
        <fileset refid="test.fileset"/>
      </batchtest>
    </junit>
  </target>

  <target name="build.test.groovy" depends="init-groovy,init.test" description="Compiles groovy test classes">
    <groovyc srcdir="${test.src.dir}" destdir="${test.build.dir}/classes">
      <classpath>
        <path refid="core.path"/>
        <path refid="test.path"/>
        <pathelement path="${classes.dir}"/>
        <pathelement path="${classpath}"/>
      </classpath>
    </groovyc>
  </target>

  <target name="test.groovy" depends="build.test.groovy">
    <setup-test/>
    <junit printsummary="yes" haltonfailure="no" showoutput="true">
      <classpath refid="test.classpath">
        <path refid="dist.path"/>
      </classpath>
      <formatter type="xml"/>
      <batchtest todir="${test.reports.dir}">
        <fileset dir="${test.build.dir}/classes">
          <include name="**/*Test*"/>
          <!-- a '$' in the filename means it's an inner class -->
          <exclude name="**/*$*"/>
        </fileset>
      </batchtest>
    </junit>
  </target>
</project>