<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project>
<project>
  
  <property name="lib.name.rc" value="${lib.name}-rc.jar"/>
  <property name="lib.dir.jenkins" value="../lib"/>
  
  <target name="init.jenkins">
    <mkdir dir="${lib.dir.jenkins}"/>
  </target>
  
  <target name="jenkins.publish" depends="dist-rc">
    <echo>Copy from: ${dist.dir}/${lib.name.rc}</echo>
    <echo>Copy to: ${lib.dir.jenkins}</echo>
    <copy todir="${lib.dir.jenkins}" file="${dist.dir}/${lib.name.rc}" />
  </target>
  
  <!-- The main task to be started from Jenkins continuous integration server. -->
  <target name="jenkins" depends="clean,jacoco,javadoc,dist-rc,jenkins.publish">
  </target>
    
  <macrodef name="my.batch">
    <sequential>
      <batchtest fork="yes" todir="${reports.dir}/junit-xml">
        <fileset dir="${test.src.dir}">
          <include name="**/*Test*.java"/>
          <exclude name="**/AllTests.java"/>
        </fileset>
      </batchtest>
    </sequential>
  </macrodef>
    
  <target name="jacoco" depends="resolve,build.test" description="Run unit tests and Jacoco code coverage reporting"> <!-- build.test.groovy -->
    <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml" classpathref="test.path"/>
    <setup-test/>
    <jacoco:coverage destfile="${reports.dir}/jacoco.exec" xmlns:jacoco="antlib:org.jacoco.ant">
      <junit haltonfailure="no" fork="true">
        <classpath refid="test.classpath"/>
        <formatter type="plain" usefile="false" />
        <formatter type="xml"/>
        <batchtest fork="yes" todir="${reports.xml.dir}">
          <fileset refid="test.fileset"/>
        </batchtest>
      </junit>
    </jacoco:coverage>
    <junitreport todir="${reports.html.dir}">
      <fileset dir="${reports.xml.dir}"/>
      <report todir="${reports.html.dir}"/>
    </junitreport>
  </target>

  <macrodef name="replaceproperty" taskname="@{taskname}">
    <attribute name="src" />
    <attribute name="dest" default="" />
    <attribute name="replace" default="" />
    <attribute name="with" default="" />
    <sequential>
        <loadresource property="@{dest}">
            <propertyresource name="@{src}" />
            <filterchain>
                <tokenfilter>
                    <filetokenizer/>
                    <replacestring from="@{replace}" to="@{with}"/>
                </tokenfilter>
            </filterchain>
        </loadresource>
    </sequential>
  </macrodef>
</project>